MANUAL MIGRATION INSTRUCTIONS
=============================

Please run the following SQL commands in your Supabase SQL Editor to create the missing tables:

1. Create daily_summary_config table:
-----------------------------------

CREATE TABLE IF NOT EXISTS daily_summary_config (
  id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  include_commitment_rate BOOLEAN DEFAULT true,
  include_top_performer BOOLEAN DEFAULT true,
  include_member_count BOOLEAN DEFAULT true,
  include_motivational_message BOOLEAN DEFAULT true,
  include_streak_info BOOLEAN DEFAULT false,
  include_weekly_progress BOOLEAN DEFAULT false,
  send_time TIME DEFAULT '20:00:00',
  send_days INTEGER[] DEFAULT ARRAY[1,2,3,4,5,6,7],
  timezone TEXT DEFAULT 'UTC',
  enabled BOOLEAN DEFAULT true,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- Insert default daily summary configuration
INSERT INTO daily_summary_config (
  include_commitment_rate,
  include_top_performer,
  include_member_count,
  include_motivational_message,
  send_time,
  send_days
) VALUES (
  true, true, true, true, '20:00:00', ARRAY[1,2,3,4,5,6,7]
);

2. Create milestone_config table:
--------------------------------

CREATE TABLE IF NOT EXISTS milestone_config (
  id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  milestone_type TEXT NOT NULL CHECK (milestone_type IN ('pot_amount', 'group_streak', 'total_points', 'member_count')),
  milestone_name TEXT NOT NULL,
  threshold_value DECIMAL NOT NULL,
  enabled BOOLEAN DEFAULT true,
  rarity TEXT DEFAULT 'legendary' CHECK (rarity IN ('common', 'rare', 'legendary')),
  description TEXT,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  UNIQUE(milestone_type, threshold_value)
);

-- Insert default milestone configurations
INSERT INTO milestone_config (milestone_type, milestone_name, threshold_value, enabled, rarity, description) VALUES
-- Pot amount milestones
('pot_amount', 'First Hundred', 100, true, 'rare', 'Group pot reaches €100'),
('pot_amount', 'Half a Grand', 500, true, 'legendary', 'Group pot reaches €500'),
('pot_amount', 'One Thousand!', 1000, true, 'legendary', 'Group pot reaches €1000'),
('pot_amount', 'Big Pot Energy', 2500, true, 'legendary', 'Group pot reaches €2500'),
('pot_amount', 'Legendary Pot', 5000, true, 'legendary', 'Group pot reaches €5000'),

-- Group streak milestones
('group_streak', 'Week Warriors', 7, true, 'rare', 'Group maintains 7-day commitment streak'),
('group_streak', 'Two Week Champions', 14, true, 'rare', 'Group maintains 14-day commitment streak'),
('group_streak', 'Monthly Masters', 30, true, 'legendary', 'Group maintains 30-day commitment streak'),
('group_streak', 'Quarter Legends', 90, true, 'legendary', 'Group maintains 90-day commitment streak'),

-- Total points milestones
('total_points', 'First Thousand', 1000, true, 'common', 'Group earns 1,000 total points'),
('total_points', 'Five Thousand Strong', 5000, true, 'rare', 'Group earns 5,000 total points'),
('total_points', 'Ten Thousand Club', 10000, true, 'rare', 'Group earns 10,000 total points'),
('total_points', 'Point Millionaires', 25000, true, 'legendary', 'Group earns 25,000 total points'),
('total_points', 'Ultimate Champions', 50000, true, 'legendary', 'Group earns 50,000 total points'),

-- Member count milestones
('member_count', 'Growing Team', 5, true, 'common', 'Group reaches 5 members'),
('member_count', 'Strong Squad', 10, true, 'rare', 'Group reaches 10 members'),
('member_count', 'Big Family', 20, true, 'rare', 'Group reaches 20 members'),
('member_count', 'Community Champions', 50, true, 'legendary', 'Group reaches 50 members');

3. Enable RLS for new tables:
-----------------------------

ALTER TABLE daily_summary_config ENABLE ROW LEVEL SECURITY;
ALTER TABLE milestone_config ENABLE ROW LEVEL SECURITY;

4. Create policies for new tables:
---------------------------------

CREATE POLICY "Supreme admins can view daily summary config" ON daily_summary_config
FOR SELECT USING (
  auth.uid() IN (
    SELECT id FROM profiles WHERE role = 'supreme_admin'
  )
);

CREATE POLICY "Supreme admins can update daily summary config" ON daily_summary_config
FOR UPDATE USING (
  auth.uid() IN (
    SELECT id FROM profiles WHERE role = 'supreme_admin'
  )
);

CREATE POLICY "Supreme admins can view milestone config" ON milestone_config
FOR ALL USING (
  auth.uid() IN (
    SELECT id FROM profiles WHERE role = 'supreme_admin'
  )
);

5. Create indexes for performance:
---------------------------------

CREATE INDEX IF NOT EXISTS idx_milestone_config_type ON milestone_config(milestone_type);
CREATE INDEX IF NOT EXISTS idx_milestone_config_enabled ON milestone_config(enabled);
CREATE INDEX IF NOT EXISTS idx_milestone_config_threshold ON milestone_config(threshold_value);

AFTER RUNNING THESE COMMANDS:
- The database errors should be resolved
- The SystemMessageConfigAdmin should load properly
- You can configure daily summaries and milestones